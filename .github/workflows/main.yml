# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Main Workflow
on: [push, pull_request]

jobs:
  code_style:
    name: Code Style Analysis
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install "pylint==2.11.1"
          pip install "pylint-ignore==2021.1020"
      - name: Pylint
        run: |
          pylint-ignore --rcfile=.pylintrc wapitiCore

  docker:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
      - name: Build
        run: |
          docker build .

  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install php8.1-cli php8.1-xml -y --no-install-recommends
        python -m pip install --upgrade pip
        pip install -U setuptools
        pip3 install .[test]
    - name: Test project
      run: |
        pytest
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  integrate:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Docker Compose
        run: bash ${GITHUB_WORKSPACE}/tests/integration/run.sh
      
      - name: Archive production artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: diff-reports-file
          path: tests/integration/.dump_diff_file.txt
